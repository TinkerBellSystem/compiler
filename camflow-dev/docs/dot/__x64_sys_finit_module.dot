digraph RGL__DirectedAdjacencyGraph {path[fontsize = 8,label = path,shape = ellipse, fillcolor="#fffacd", style = filled]

process_memory[fontsize = 8,label = process_memory,shape = ellipse, fillcolor="#fffacd", style = filled]

path -> process_memory[fontsize = 8,label = named_process]

machine[fontsize = 8,label = machine,shape = house, fillcolor="#ff8c00", style = filled]

task[fontsize = 8,label = task,shape = rectangle, fillcolor="#e6e6fa", style = filled]

machine -> task[fontsize = 8,label = ran_on]

inode[fontsize = 8,label = inode,shape = ellipse, fillcolor="#fffacd", style = filled]

path -> inode[fontsize = 8,label = named]

inode -> task[fontsize = 8,label = open]

task -> process_memory[fontsize = 8,label = memory_write]

task -> task[fontsize = 8,label = version_activity]

process_memory -> process_memory[fontsize = 8,label = version_entity]

process_memory -> inode[fontsize = 8,label = sh_write]

inode -> inode[fontsize = 8,label = version_entity]

process_memory -> task[fontsize = 8,label = memory_read]

task -> inode[fontsize = 8,label = write]

inode -> process_memory[fontsize = 8,label = sh_read]

inode -> task[fontsize = 8,label = read]

inode -> task[fontsize = 8,label = search]

task -> inode[fontsize = 8,label = send]

inode -> task[fontsize = 8,label = receive]

inode -> process_memory[fontsize = 8,label = exec]

inode -> task[fontsize = 8,label = file_sigio]

inode -> task[fontsize = 8,label = load_file]

task -> machine[fontsize = 8,label = load_unknown]

machine -> machine[fontsize = 8,label = version_entity]

task -> machine[fontsize = 8,label = load_firmware]

task -> machine[fontsize = 8,label = load_firmware_prealloc_buffer]

task -> machine[fontsize = 8,label = load_module]

task -> machine[fontsize = 8,label = load_kexec_image]

task -> machine[fontsize = 8,label = load_kexec_initramfs]

task -> machine[fontsize = 8,label = load_policy]

task -> machine[fontsize = 8,label = load_certificate]

packet_content[fontsize = 8,label = packet_content,shape = ellipse, fillcolor="#fffacd", style = filled]

packet[fontsize = 8,label = packet,shape = ellipse, fillcolor="#fffacd", style = filled]

packet_content -> packet[fontsize = 8,label = packet_content]

packet -> inode[fontsize = 8,label = receive_packet]

task -> task[fontsize = 8,label = terminate_task]

}